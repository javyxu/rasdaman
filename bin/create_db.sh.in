#!/bin/bash
#
# This file is part of rasdaman community.
#
# Rasdaman community is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Rasdaman community is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with rasdaman community.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2003, 2004, 2005, 2006, 2007, 2008, 2009 Peter Baumann /
# rasdaman GmbH.
#
# For more information please see <http://www.rasdaman.org>
# or contact Peter Baumann via <baumann@rasdaman.com>.      
#
#
# PURPOSE:
#   This script creates a CREATE_DB.sql script for
#   generating a rasdaman database with PostgreSQL.
#   This script must be executed by the user which
#   runs the PostgreSQL server.
#
#
# COMMENTS:
#   List environment dependencies, known bugs, specialities etc.
#   -------------------------------------------------------------------
#
########################################################################

# --- constants & routines

# script name
PROG=$(basename $0)
VERSION=9.7

# script return codes
RC_OK=0
RC_ERROR=1

BASEDBMS=@basedbms@
BASEDBMS_SQLITE=sqlite
BASEDBMS_PGSQL=pgsql

# Unix user name under which rasdaman server is expected to run
RASDAMAN_USER=rasdaman

# default database name
# (if you change this, then a _lot_ of tools and configs
# have to get the new database name explicitly, so you may
# want to seriously consider whether you really want this)
DATABASE_NAME=RASBASE

# rasdaman base type definition file
DEFINITION_FILE=@pkgdatadir@examples/rasdl/basictypes.dl

# error termination routine
error() {
	echo
	echo "$PROG: $1" >&2
	exit $RC_ERROR
}

log()
{
  echo "$PROG: $*"
}

logn()
{
  echo -n "$PROG: $*"
}

log "creating database, rasdaman v$VERSION on base DBMS $BASEDBMS"

# --- checking preconditions

# - Can I find utilities?
if [ "$BASEDBMS" == "$BASEDBMS_PGSQL" ]; then
    psql --help 2>&1 1>/dev/null || \
        error "Error: cannot find psql - PostgreSQL not installed or PATH variable does not contain PostgreSQL path?"
fi

@bindir@rasdl --help 2>&1 1>/dev/null
if [[ $? != 2 ]]
then
	error "Error: cannot find rasdl - PATH variable does not contain rasdaman path?"
fi

if [[ ! -f $DEFINITION_FILE ]]
then
	error "Error: cannot find rasdaman basic type definition file '$DEFINITION_FILE'"
fi

# --- action: create database directory & cluster if needed

if [ "$BASEDBMS" == "$BASEDBMS_PGSQL" ]; then
    logn "PostgreSQL database generation... "
    createdb $DATABASE_NAME > /dev/null || error "createdb failed creating PostgreSQL database $DATABASE_NAME."
    echo "ok."
fi

# - check if user has rights to create SQLite database
if [ "$BASEDBMS" == "$BASEDBMS_SQLITE" ]; then
  datadir=$(dirname "@dbconn@")
  if [ ! -d "$datadir" ]
  then
    logn "filestorage directory '$datadir' not found, creating... "
    mkdir -p "$datadir" || error "failed creating filestorage directory '$datadir'."
    echo "ok."
  fi
  if [ ! -w "$datadir" ]
  then
    error "Error: User '$USER' has no write permissions in '$datadir', rasdaman database cannot be created."
  fi
  if [ ! -x "$datadir" ]
  then
    error "Error: User '$USER' has no execute permissions in '$datadir' (and/or parent directories), rasdaman database cannot be created."
  fi
fi

# - rasdaman part

log "rasdaman dictionary initialization... "

logn "  creating RASBASE... "
@bindir@rasdl -c --connect @dbconn@ > /dev/null || \
  error "rasdl failed creating RASBASE."
echo "ok."

logn "  inserting standard types... "
@bindir@rasdl -r $DEFINITION_FILE -i --connect @dbconn@ > /dev/null || \
  error "rasdl failed reading standard type definitions."
echo "ok."

# --- action end 

log "done."
exit $RC_OK

# --- end of script

